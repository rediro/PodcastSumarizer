import os
import vosk
import sys
import json
import wave
import pyaudio


def transcribe_real_time():
    model = vosk.Model("model")  # Ensure the Vosk model is downloaded in "model" folder
    recognizer = vosk.KaldiRecognizer(model, 16000)
    p = pyaudio.PyAudio()
    stream = p.open(format=pyaudio.paInt16, channels=1, rate=16000, input=True, frames_per_buffer=8192)
    stream.start_stream()

    print("Listening...")
    while True:
        data = stream.read(4096, exception_on_overflow=False)
        if recognizer.AcceptWaveform(data):
            result = json.loads(recognizer.Result())
            print("Transcription:", result["text"])
            return result["text"]


def transcribe_audio_file(file_path):
    model = vosk.Model("model")  # Ensure the Vosk model is downloaded
    wf = wave.open(file_path, "rb")
    recognizer = vosk.KaldiRecognizer(model, wf.getframerate())

    result_text = ""
    while True:
        data = wf.readframes(4000)
        if len(data) == 0:
            break
        if recognizer.AcceptWaveform(data):
            result = json.loads(recognizer.Result())
            result_text += result["text"] + " "

    print("Transcription:", result_text.strip())
    return result_text.strip()


if __name__ == "__main__":
    choice = input("Choose an option:\n1. Real-time Transcription\n2. Transcribe an Audio File\nEnter (1/2): ")

    if choice == "1":
        transcribe_real_time()
    elif choice == "2":
        file_path = input("Enter the path to the audio file: ")
        if os.path.exists(file_path):
            transcribe_audio_file(file_path)
        else:
            print("File not found!")
    else:
        print("Invalid choice!")
